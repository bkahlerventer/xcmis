package org.xcmis.wssoap.test.client;

/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.BindingProvider;

import junit.framework.TestCase;

import org.xcmis.soap.client.CmisException;
import org.xcmis.soap.client.NavigationService;
import org.xcmis.soap.client.NavigationServicePort;
import org.xcmis.spi.RenditionFilter;

/**
 * This class was generated by Apache CXF 2.1.4
 * Fri Apr 16 12:27:35 EEST 2010
 * Generated source version: 2.1.4
 * 
 */

public final class NavigationServicePortTest extends BaseTest
{

   private static final QName NAV_SERVICE_NAME =
      new QName("http://docs.oasis-open.org/ns/cmis/ws/200908/", "NavigationService");

   NavigationServicePort nav_port;

   protected void setUp() throws Exception
   {
      URL wsdlURL = NavigationService.WSDL_LOCATION;

      NavigationService ss = new NavigationService(wsdlURL, NAV_SERVICE_NAME);
      nav_port = ss.getNavigationServicePort();
      ((BindingProvider)nav_port).getRequestContext().put(BindingProvider.USERNAME_PROPERTY, "root");
      ((BindingProvider)nav_port).getRequestContext().put(BindingProvider.PASSWORD_PROPERTY, "exo");
       super.setUp();
   }

   public void testGetObjectParents()
   {
      System.out.println("Invoking getObjectParents...");
      java.lang.String _getObjectParents_repositoryId = cmisRepositoryId;
      java.lang.String _getObjectParents_objectId = "";
      try {
       _getObjectParents_objectId = createDocument("test123", rootFolderId);
      } catch (Exception e){
         fail(e.getMessage());
      }
      java.lang.String _getObjectParents_filter = "*";
      java.lang.Boolean _getObjectParents_includeAllowableActions = Boolean.TRUE;
      org.xcmis.soap.client.EnumIncludeRelationships _getObjectParents_includeRelationships = null;
      java.lang.String _getObjectParents_renditionFilter = RenditionFilter.NONE_FILTER;
      java.lang.Boolean _getObjectParents_includeRelativePathSegment = Boolean.FALSE;
      org.xcmis.soap.client.CmisExtensionType _getObjectParents_extension = null;
      try
      {
         java.util.List<org.xcmis.soap.client.CmisObjectParentsType> _getObjectParents__return =
            nav_port.getObjectParents(_getObjectParents_repositoryId, _getObjectParents_objectId, _getObjectParents_filter,
               _getObjectParents_includeAllowableActions, _getObjectParents_includeRelationships,
               _getObjectParents_renditionFilter, _getObjectParents_includeRelativePathSegment,
               _getObjectParents_extension);
         System.out.println("getObjectParents.result=" + _getObjectParents__return);
         for (org.xcmis.soap.client.CmisObjectParentsType one : _getObjectParents__return)
         {
            System.out.println("Prop size: " + one.getObject().getProperties().getProperty().size());
         }

      }
      catch (CmisException ex)
      {
         System.out.println("Expected exception: cmisException has occurred.");
         System.out.println(ex.toString());
         fail();
      }
   }

   public void testGetCheckedOutDocs()
   {
      System.out.println("Invoking getCheckedOutDocs...");
      java.lang.String _getCheckedOutDocs_repositoryId = cmisRepositoryId;
      java.lang.String _getCheckedOutDocs_folderId = rootFolderId;
      java.lang.String _getCheckedOutDocs_filter = "*";
      java.lang.String _getCheckedOutDocs_orderBy = "";
      java.lang.Boolean _getCheckedOutDocs_includeAllowableActions = Boolean.TRUE;
      org.xcmis.soap.client.EnumIncludeRelationships _getCheckedOutDocs_includeRelationships = null;
      java.lang.String _getCheckedOutDocs_renditionFilter = RenditionFilter.NONE_FILTER;
      java.math.BigInteger _getCheckedOutDocs_maxItems = new java.math.BigInteger("10");
      java.math.BigInteger _getCheckedOutDocs_skipCount = new java.math.BigInteger("0");
      org.xcmis.soap.client.CmisExtensionType _getCheckedOutDocs_extension = null;
      try
      {
         org.xcmis.soap.client.CmisObjectListType _getCheckedOutDocs__return =
            nav_port.getCheckedOutDocs(_getCheckedOutDocs_repositoryId, _getCheckedOutDocs_folderId,
               _getCheckedOutDocs_filter, _getCheckedOutDocs_orderBy, _getCheckedOutDocs_includeAllowableActions,
               _getCheckedOutDocs_includeRelationships, _getCheckedOutDocs_renditionFilter,
               _getCheckedOutDocs_maxItems, _getCheckedOutDocs_skipCount, _getCheckedOutDocs_extension);
         System.out.println("getCheckedOutDocs.result=" + _getCheckedOutDocs__return);

      }
      catch (CmisException e)
      {
         System.out.println("Expected exception: cmisException has occurred.");
         System.out.println(e.toString());
         fail();
      }
   }

   public void testGetDescendants()
   {
      System.out.println("Invoking getDescendants...");
      try {
      createDocument("test1234", rootFolderId);
      createFolder("11133");
      } catch (Exception e){
         fail(e.getMessage());
      }
      java.lang.String _getDescendants_repositoryId = cmisRepositoryId;
      java.lang.String _getDescendants_folderId = rootFolderId;
      java.math.BigInteger _getDescendants_depth = new java.math.BigInteger("-1");
      java.lang.String _getDescendants_filter = "*";
      java.lang.Boolean _getDescendants_includeAllowableActions = Boolean.TRUE;
      org.xcmis.soap.client.EnumIncludeRelationships _getDescendants_includeRelationships = null;
      java.lang.String _getDescendants_renditionFilter = RenditionFilter.NONE_FILTER;
      java.lang.Boolean _getDescendants_includePathSegment = Boolean.FALSE;
      org.xcmis.soap.client.CmisExtensionType _getDescendants_extension = null;
      try
      {
         java.util.List<org.xcmis.soap.client.CmisObjectInFolderContainerType> _getDescendants__return =
            nav_port.getDescendants(_getDescendants_repositoryId, _getDescendants_folderId, _getDescendants_depth,
               _getDescendants_filter, _getDescendants_includeAllowableActions, _getDescendants_includeRelationships,
               _getDescendants_renditionFilter, _getDescendants_includePathSegment, _getDescendants_extension);
         System.out.println("getDescendants.result=" + _getDescendants__return);
         for (org.xcmis.soap.client.CmisObjectInFolderContainerType one : _getDescendants__return)
         {
            System.out
               .println("Prop size: " + one.getObjectInFolder().getObject().getProperties().getProperty().size());
         }

      }
      catch (CmisException ex)
      {
         System.out.println("Expected exception: cmisException has occurred.");
         System.out.println(ex.toString());
         fail();
      }
   }

   public void testGetFolderTree()
   {
      System.out.println("Invoking getFolderTree...");
      java.lang.String _getFolderTree_repositoryId = cmisRepositoryId;
      java.lang.String _getFolderTree_folderId = rootFolderId;
      java.math.BigInteger _getFolderTree_depth = new java.math.BigInteger("-1");
      java.lang.String _getFolderTree_filter = "*";
      java.lang.Boolean _getFolderTree_includeAllowableActions = Boolean.TRUE;
      org.xcmis.soap.client.EnumIncludeRelationships _getFolderTree_includeRelationships = null;
      java.lang.String _getFolderTree_renditionFilter = RenditionFilter.NONE_FILTER;
      java.lang.Boolean _getFolderTree_includePathSegment = Boolean.FALSE;
      org.xcmis.soap.client.CmisExtensionType _getFolderTree_extension = null;
      try
      {
         java.util.List<org.xcmis.soap.client.CmisObjectInFolderContainerType> _getFolderTree__return =
            nav_port.getFolderTree(_getFolderTree_repositoryId, _getFolderTree_folderId, _getFolderTree_depth,
               _getFolderTree_filter, _getFolderTree_includeAllowableActions, _getFolderTree_includeRelationships,
               _getFolderTree_renditionFilter, _getFolderTree_includePathSegment, _getFolderTree_extension);
         System.out.println("getFolderTree.result=" + _getFolderTree__return);
         for (org.xcmis.soap.client.CmisObjectInFolderContainerType one : _getFolderTree__return)
         {
            System.out.println(one.getObjectInFolder().getObject());
         }

      }
      catch (CmisException e)
      {
         System.out.println("Expected exception: cmisException has occurred.");
         System.out.println(e.toString());
         fail();
      }
   }

   public void testGetChildren()
   {
      System.out.println("Invoking getChildren...");
      java.lang.String _getChildren_repositoryId = cmisRepositoryId;
      java.lang.String _getChildren_folderId = rootFolderId;
      java.lang.String _getChildren_filter = "*";
      java.lang.String _getChildren_orderBy = "";
      java.lang.Boolean _getChildren_includeAllowableActions = Boolean.TRUE;
      org.xcmis.soap.client.EnumIncludeRelationships _getChildren_includeRelationships = null;
      java.lang.String _getChildren_renditionFilter = RenditionFilter.NONE_FILTER;
      java.lang.Boolean _getChildren_includePathSegment = Boolean.FALSE;
      java.math.BigInteger _getChildren_maxItems = new java.math.BigInteger("10");
      java.math.BigInteger _getChildren_skipCount = new java.math.BigInteger("0");
      org.xcmis.soap.client.CmisExtensionType _getChildren_extension = null;
      try
      {
         org.xcmis.soap.client.CmisObjectInFolderListType _getChildren__return =
            nav_port.getChildren(_getChildren_repositoryId, _getChildren_folderId, _getChildren_filter,
               _getChildren_orderBy, _getChildren_includeAllowableActions, _getChildren_includeRelationships,
               _getChildren_renditionFilter, _getChildren_includePathSegment, _getChildren_maxItems,
               _getChildren_skipCount, _getChildren_extension);
         System.out.println("getChildren.result=" + _getChildren__return);
         System.out.println("Getchildler size: " + _getChildren__return.getObjects().size());

      }
      catch (CmisException e)
      {
         System.out.println("Expected exception: cmisException has occurred.");
         System.out.println(e.toString());
         fail();
      }
   }

   public void testGetFolderParent()
   {
      System.out.println("Invoking getFolderParent...");
      java.lang.String _getFolderParent_repositoryId = cmisRepositoryId;
      java.lang.String _getFolderParent_folderId = "";
      try {
         _getFolderParent_folderId  = createFolder("1113");
      } catch (Exception e ){
         e.printStackTrace();
         fail(e.getMessage());
      }
      java.lang.String _getFolderParent_filter = "*";
      org.xcmis.soap.client.CmisExtensionType _getFolderParent_extension = null;
      try
      {
         org.xcmis.soap.client.CmisObjectType _getFolderParent__return =
            nav_port.getFolderParent(_getFolderParent_repositoryId, _getFolderParent_folderId, _getFolderParent_filter,
               _getFolderParent_extension);
         System.out.println("getFolderParent.result=" + _getFolderParent__return);
         System.out.println("Props size: " + _getFolderParent__return.getProperties().getProperty().size());

      }
      catch (CmisException ex)
      {
         System.out.println("Expected exception: cmisException has occurred.");
         System.out.println(ex.toString());
         fail();
      }
   }

}
