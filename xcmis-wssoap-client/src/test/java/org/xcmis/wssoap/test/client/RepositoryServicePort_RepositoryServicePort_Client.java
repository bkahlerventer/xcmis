
package org.xcmis.wssoap.test.client;

/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

import org.xcmis.soap.client.CmisException;
import org.xcmis.soap.client.RepositoryService;
import org.xcmis.soap.client.RepositoryServicePort;

import java.io.File;
import java.net.MalformedURLException;
import java.net.URL;

import javax.xml.namespace.QName;
import javax.xml.ws.BindingProvider;

/**
 * This class was generated by Apache CXF 2.1.4
 * Fri Apr 16 16:56:41 EEST 2010
 * Generated source version: 2.1.4
 * 
 */

public final class RepositoryServicePort_RepositoryServicePort_Client {

    private static final QName SERVICE_NAME = new QName("http://docs.oasis-open.org/ns/cmis/ws/200908/", "RepositoryService");

    private RepositoryServicePort_RepositoryServicePort_Client() {
    }

    public static void main(String args[]) throws Exception {
        URL wsdlURL = RepositoryService.WSDL_LOCATION;
        if (args.length > 0) { 
            File wsdlFile = new File(args[0]);
            try {
                if (wsdlFile.exists()) {
                    wsdlURL = wsdlFile.toURI().toURL();
                } else {
                    wsdlURL = new URL(args[0]);
                }
            } catch (MalformedURLException e) {
                e.printStackTrace();
            }
        }
      
        RepositoryService ss = new RepositoryService(wsdlURL, SERVICE_NAME);
        RepositoryServicePort port = ss.getRepositoryServicePort();  
        ((BindingProvider)port).getRequestContext().put(BindingProvider.USERNAME_PROPERTY, "root");
        ((BindingProvider)port).getRequestContext().put(BindingProvider.PASSWORD_PROPERTY, "exo");
        
        {
        System.out.println("Invoking getTypeDefinition...");
        java.lang.String _getTypeDefinition_repositoryId = "cmis1";
        java.lang.String _getTypeDefinition_typeId = "cmis:folder";
        org.xcmis.soap.client.CmisExtensionType _getTypeDefinition_extension = null;
        try {
            org.xcmis.soap.client.CmisTypeDefinitionType _getTypeDefinition__return = port.getTypeDefinition(_getTypeDefinition_repositoryId, _getTypeDefinition_typeId, _getTypeDefinition_extension);
            System.out.println("getTypeDefinition.result=" + _getTypeDefinition__return);

        } catch (CmisException e) { 
            System.out.println("Expected exception: cmisException has occurred.");
            System.out.println(e.toString());
        }
            }
        {
        System.out.println("Invoking getTypeDescendants...");
        java.lang.String _getTypeDescendants_repositoryId = "cmis1";
        java.lang.String _getTypeDescendants_typeId = "cmis:folder";
        java.math.BigInteger _getTypeDescendants_depth = new java.math.BigInteger("10");
        java.lang.Boolean _getTypeDescendants_includePropertyDefinitions = Boolean.TRUE;
        org.xcmis.soap.client.CmisExtensionType _getTypeDescendants_extension = null;
        try {
            java.util.List<org.xcmis.soap.client.CmisTypeContainer> _getTypeDescendants__return = port.getTypeDescendants(_getTypeDescendants_repositoryId, _getTypeDescendants_typeId, _getTypeDescendants_depth, _getTypeDescendants_includePropertyDefinitions, _getTypeDescendants_extension);
            System.out.println("getTypeDescendants.result=" + _getTypeDescendants__return);

        } catch (CmisException e) { 
            System.out.println("Expected exception: cmisException has occurred.");
            System.out.println(e.toString());
        }
            }
        {
        System.out.println("Invoking getTypeChildren...");
        java.lang.String _getTypeChildren_repositoryId = "cmis1";
        java.lang.String _getTypeChildren_typeId = "cmis:folder";
        java.lang.Boolean _getTypeChildren_includePropertyDefinitions = Boolean.TRUE;
        java.math.BigInteger _getTypeChildren_maxItems = new java.math.BigInteger("10");
        java.math.BigInteger _getTypeChildren_skipCount = new java.math.BigInteger("0");
        org.xcmis.soap.client.CmisExtensionType _getTypeChildren_extension = null;
        try {
            org.xcmis.soap.client.CmisTypeDefinitionListType _getTypeChildren__return = port.getTypeChildren(_getTypeChildren_repositoryId, _getTypeChildren_typeId, _getTypeChildren_includePropertyDefinitions, _getTypeChildren_maxItems, _getTypeChildren_skipCount, _getTypeChildren_extension);
            System.out.println("getTypeChildren.result=" + _getTypeChildren__return);

        } catch (CmisException e) { 
            System.out.println("Expected exception: cmisException has occurred.");
            System.out.println(e.toString());
        }
            }
        {
        System.out.println("Invoking getRepositoryInfo...");
        java.lang.String _getRepositoryInfo_repositoryId = "cmis1";
        org.xcmis.soap.client.CmisExtensionType _getRepositoryInfo_extension = null;
        try {
            org.xcmis.soap.client.CmisRepositoryInfoType _getRepositoryInfo__return = port.getRepositoryInfo(_getRepositoryInfo_repositoryId, _getRepositoryInfo_extension);
            System.out.println("getRepositoryInfo.result=" + _getRepositoryInfo__return);

        } catch (CmisException e) { 
            System.out.println("Expected exception: cmisException has occurred.");
            System.out.println(e.toString());
        }
            }
        {
        System.out.println("Invoking getRepositories...");
        org.xcmis.soap.client.CmisExtensionType _getRepositories_extension = null;
        try {
            java.util.List<org.xcmis.soap.client.CmisRepositoryEntryType> _getRepositories__return = port.getRepositories(_getRepositories_extension);
            System.out.println("getRepositories.result=" + _getRepositories__return);

        } catch (CmisException e) { 
            System.out.println("Expected exception: cmisException has occurred.");
            System.out.println(e.toString());
        }
            }

        System.exit(0);
    }

}
