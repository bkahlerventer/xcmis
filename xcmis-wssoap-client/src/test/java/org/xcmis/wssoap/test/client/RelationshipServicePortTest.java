package org.xcmis.wssoap.test.client;

/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

import org.xcmis.soap.client.RelationshipServicePort;
import org.xcmis.soap.client.EnumRelationshipDirection;
import org.xcmis.soap.client.RelationshipService;
import org.xcmis.soap.client.CmisException;

import java.io.File;
import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.BindingProvider;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

import junit.framework.TestCase;


/**
 * This class was generated by Apache CXF 2.1.4
 * Mon Apr 19 11:58:43 EEST 2010
 * Generated source version: 2.1.4
 * 
 */

public final class RelationshipServicePortTest extends BaseTest
{

   private static final QName REL_SERVICE_NAME =
      new QName("http://docs.oasis-open.org/ns/cmis/ws/200908/", "RelationshipService");

   RelationshipServicePort rel_port;

   public  void setUp() throws Exception
   {
      URL wsdlURL = RelationshipService.WSDL_LOCATION;

      RelationshipService ss = new RelationshipService(wsdlURL, REL_SERVICE_NAME);
      rel_port = ss.getRelationshipServicePort();
      ((BindingProvider)rel_port).getRequestContext().put(BindingProvider.USERNAME_PROPERTY, "root");
      ((BindingProvider)rel_port).getRequestContext().put(BindingProvider.PASSWORD_PROPERTY, "exo");
      super.setUp();
   }

   public void testGetObjectRelationships()
   {
      System.out.println("Invoking getObjectRelationships...");
      
      String source = "";
      String target = "";
      try {
         source = createDocument("test811", rootFolderId);
         target = createDocument("test812", rootFolderId);
         createRelationship(source, target);
      } catch(Exception ex) {
         fail(ex.getMessage());
      }
      
      java.lang.String _getObjectRelationships_repositoryId = cmisRepositoryId;
      java.lang.String _getObjectRelationships_objectId = source;
      java.lang.Boolean _getObjectRelationships_includeSubRelationshipTypes = Boolean.TRUE;
      EnumRelationshipDirection _getObjectRelationships_relationshipDirection = EnumRelationshipDirection.EITHER;
      java.lang.String _getObjectRelationships_typeId = "";
      java.lang.String _getObjectRelationships_filter = "*";
      java.lang.Boolean _getObjectRelationships_includeAllowableActions = Boolean.TRUE;
      java.math.BigInteger _getObjectRelationships_maxItems = new java.math.BigInteger("10");
      java.math.BigInteger _getObjectRelationships_skipCount = new java.math.BigInteger("0");
      org.xcmis.soap.client.CmisExtensionType _getObjectRelationships_extension = null;
      try
      {
         org.xcmis.soap.client.CmisObjectListType _getObjectRelationships__return =
            rel_port.getObjectRelationships(_getObjectRelationships_repositoryId, _getObjectRelationships_objectId,
               _getObjectRelationships_includeSubRelationshipTypes, _getObjectRelationships_relationshipDirection,
               _getObjectRelationships_typeId, _getObjectRelationships_filter,
               _getObjectRelationships_includeAllowableActions, _getObjectRelationships_maxItems,
               _getObjectRelationships_skipCount, _getObjectRelationships_extension);
         System.out.println("getObjectRelationships.result=" + _getObjectRelationships__return);

      }
      catch (CmisException e)
      {
         System.out.println("Expected exception: cmisException has occurred.");
         System.out.println(e.toString());
         fail();
      }
      finally {
         deleteObject(source);
         deleteObject(target);
      }
   }
}
