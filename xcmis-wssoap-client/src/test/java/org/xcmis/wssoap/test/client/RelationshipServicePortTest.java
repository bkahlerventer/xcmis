package org.xcmis.wssoap.test.client;

/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

import org.xcmis.soap.client.CmisException;
import org.xcmis.soap.client.EnumRelationshipDirection;
import org.xcmis.soap.client.RelationshipService;
import org.xcmis.soap.client.RelationshipServicePort;

import java.net.URL;

import javax.xml.namespace.QName;
import javax.xml.ws.BindingProvider;

/**
 * This class was generated by Apache CXF 2.1.4
 * Mon Apr 19 11:58:43 EEST 2010
 * Generated source version: 2.1.4
 * 
 */

public final class RelationshipServicePortTest extends BaseTest
{

   private static final QName RELATIONSHIP_SERVICE_NAME =
      new QName("http://docs.oasis-open.org/ns/cmis/ws/200908/", "RelationshipService");

   RelationshipServicePort relationship_port;

   public void setUp() throws Exception
   {
      URL wsdlURL = RelationshipService.WSDL_LOCATION;

      RelationshipService ss = new RelationshipService(wsdlURL, RELATIONSHIP_SERVICE_NAME);
      relationship_port = ss.getRelationshipServicePort();
      ((BindingProvider)relationship_port).getRequestContext().put(BindingProvider.USERNAME_PROPERTY, username);
      ((BindingProvider)relationship_port).getRequestContext().put(BindingProvider.PASSWORD_PROPERTY, password);
      super.setUp();
   }

   public void testGetObjectRelationships() throws Exception
   {
      System.out.println("Invoking getObjectRelationships...");

      String sourceObjectId = createDocument("testGetObjectRelationships_source_" + System.nanoTime(), rootFolderId);
      String targetObjectId = createDocument("ttestGetObjectRelationships_target_" + System.nanoTime(), rootFolderId);

      String relationshipId = createRelationship(sourceObjectId, targetObjectId);

      java.lang.Boolean _getObjectRelationships_includeSubRelationshipTypes = Boolean.TRUE;
      EnumRelationshipDirection _getObjectRelationships_relationshipDirection = EnumRelationshipDirection.EITHER;
      java.lang.String _getObjectRelationships_typeId = null;
      java.lang.String _getObjectRelationships_filter = "*";
      java.lang.Boolean _getObjectRelationships_includeAllowableActions = Boolean.TRUE;
      java.math.BigInteger _getObjectRelationships_maxItems = new java.math.BigInteger("10");
      java.math.BigInteger _getObjectRelationships_skipCount = new java.math.BigInteger("0");
      org.xcmis.soap.client.CmisExtensionType _getObjectRelationships_extension = null;
      try
      {
         org.xcmis.soap.client.CmisObjectListType _getObjectRelationships__return =
            relationship_port.getObjectRelationships(cmisRepositoryId, sourceObjectId,
               _getObjectRelationships_includeSubRelationshipTypes, _getObjectRelationships_relationshipDirection,
               _getObjectRelationships_typeId, _getObjectRelationships_filter,
               _getObjectRelationships_includeAllowableActions, _getObjectRelationships_maxItems,
               _getObjectRelationships_skipCount, _getObjectRelationships_extension);
         System.out.println("getObjectRelationships.result=" + _getObjectRelationships__return);

      }
      catch (CmisException e)
      {
         System.out.println("Expected exception: cmisException has occurred.");
         System.out.println(e.toString());
         fail();
      }
      finally
      {
         deleteObject(relationshipId);
         deleteObject(sourceObjectId);
         deleteObject(targetObjectId);
      }
   }
}
